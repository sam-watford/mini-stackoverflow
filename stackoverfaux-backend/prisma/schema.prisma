// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  createdAt DateTime   @default(now())
  questions Question[]
  answers   Answer[]
  comments  Comment[]
}

model Question {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  score     Int       @default(0)
  answers   Answer[]
  comments  Comment[]
}

model Answer {
  id         Int       @id @default(autoincrement())
  body       String
  questionId Int
  userId     Int
  question   Question  @relation(fields: [questionId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  score      Int       @default(0)
  comments   Comment[]
}

model Comment {
  id         Int       @id @default(autoincrement())
  body       String
  userId     Int
  questionId Int?
  answerId   Int?
  user       User      @relation(fields: [userId], references: [id])
  question   Question? @relation(fields: [questionId], references: [id])
  answer     Answer?   @relation(fields: [answerId], references: [id])
  createdAt  DateTime  @default(now())
}
